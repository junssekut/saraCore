local E={_VERSION="0.1.6";_AUTHOR="junssekut#4964",_CONTRIBUTORS={}}local D={}local k={}local n={}local R={}local P={}local Z={}local I={}local H={}local q={}local b={}local e={}local Q={}local v={}local o={}local f={VALUE_MISMATCH="[%s] got: %s",TYPE_MISMATCH="[%s] got: %s, expected: %s"}local u={JOIN_WORLD="action|join_request\nname|%s\ninvitedWorld|0",DROP_DIALOG="action|drop\n|itemID|%d",DROP_OK="action|dialog_return\ndialog_name|drop_item\nitemID|%d|\ncount|%d",EXIT="action|quit_to_exit";TUTORIAL_POPUP_CLOSE="ftue_start_popup_close";TAKE_VEND="action|dialog_return\ndialog_name|vending\ntilex|%d|\ntiley|%d|\nbuttonClicked|pullstock\n\nsetprice|0\nchk_peritem|0\nchk_perlock|1";INSERT_VEND="action|dialog_return\ndialog_name|vending\ntilex|%d|\ntiley|%d|\nstockitem|%d",UPDATE_VEND="action|dialog_return\ndialog_name|vending\ntilex|%d|\ntiley|%d|\nbuttonClicked|addstock\n\nsetprice|0\nchk_peritem|0\nchk_perlock|1"}local g={SELECT_ALL="Select All",GUEST_ACCOUNT="Guest Account";EXTERNAL="External";AUTO_ACCESS="Auto Access",AUTO_RECONNECT="Auto Reconnect";AUTO_LEAVE="Auto Leave";IGNORE_GEMS="Ignore Gems"}local r=_G.getBot local V=_G.getTile local h=_G.sendPacket local i=_G.sendPacketRaw local G=_G.sleep local F=_G.connect local t=_G.request local s=_G.setBool local j=_G.removeBot local m=_G.addBot local a=_G.findItem local K=_G.getPing local p=_G.findPath local S=_G.getPlayers local J=_G.enter local d=_G.punch local U=_G.place local O=_G.collect local y=_G.wear local W=_G.findClothes local z=_G.say local X=string.format local l=math.floor local A=math.abs local T=os.date local w=os.time local Y=os.difftime local x=R.isWhiteDoor local M=n.isOnline local N=v.isFailed local B=Q.isStuck local c=assert((load(t("GET","https://raw.githubusercontent.com/junssekut/saraItemDatabase/main/ItemDatabase.lua")))())local L=assert((load(t("GET","https://raw.githubusercontent.com/rxi/json.lua/master/json.lua")))())local C=assert((load(t("GET","https://raw.githubusercontent.com/Tieske/date/master/src/date.lua")))())local EO local DO local function kO(E,D)if not E then error(D or"Assertion Failed!")end return E end local function nO(E,D,k)return kO(type(D)==k,f.TYPE_MISMATCH:format(E,type(D),k))end function k.exit()h(3,u.EXIT)while not k.isInside("exit")do G(1000)end end function v.getCaptcha()if not r()then return"unknown"end return(r()).captcha or"unknown"end function v.isFailed()return not(v.getCaptcha()):match("Solved")end function v.handleCaptcha()local E=w()disconnect()G(250)D.reconnect()return C.diff(E)end function k.warp(E,P,Z,I,H)P=P or""Z=Z or 15 I=I or 6 H=H or 5000 nO("worldhandler:warp<world>",E,"string")nO("worldhandler:warp<id>",P,"string")nO("worldhandler:warp<limit_tries>",Z,"number")nO("worldhandler:warp<after_tries>",I,"number")E=E:upper()local q=0 local b=5 while not k.isInside(E)do if not n.isOnline()then D.reconnect()end if q~=0 and q%(I*Z)==0 then return false end if q%I==0 then h(3,u.JOIN_WORLD:format(P==""and E or E..("|"..P)))end q=q+1 local R=0 while R~=b do R=R+1 G(1000)if k.isInside(E)then break end end end if E=="EXIT"or P==""then return k.isInside(E)end q=0 while R.isWhiteDoor()do if not n.isOnline()then D.reconnect()end if q~=0 and q%(I*Z)==0 then return false end if q%I==0 then h(3,u.JOIN_WORLD:format(E..("|"..P)))end q=q+1 local k=0 while k~=b do k=k+1 G(1000)if not R.isWhiteDoor()then break end end end G(b)return k.isInside(E)end function k.getWorld()if not r()then return"unknown"end return(r()).world or"unknown"end function k.isInside(E)kO(type(E)=="string",f.VALUE_MISMATCH:format("worldhandler:isinside<world>",type(E)))return k.getWorld()==E end function R.isWhiteDoor()if not r()then return false end local E=V(l((r()).x*.03125),l((r()).y*.03125))return(E and E.fg or nil)==6 end function n.getStatus(E)if not r(E or nil)then return"offline"end return(r(E or nil)).status or"offline"end function n.isOnline(E,D)return(D or n.getStatus(E or nil))=="online"end function R.calculateFloating(E,D)if(V(E,D)).flags==0 then return E,D,0,0 end local k=R.getx()for n=-1,1,2 do if E+n==k then return E,D,-n,0 end end for k=-1,1,2 do if E+k>=0 and E+k<=99 then if(V(E+k,D)).flags==0 then if not p(E+k,D)then G(500)else G(150)return E,D,-k,0 end end end end for k=-1,1,1 do for n=-2,2,2 do if(E+k>=0 and E+k<=99)and(D+n>=0 and D+n<=53)then if(V(E+k,D+n)).flags==0 then if not p(E+k,D+n)then G(500)else G(150)return E,D,-k,-n end end end end end return nil end function R.getx()if not r()then return nil end return l(((r()).x or 0)*.03125)end function R.gety()if not r()then return nil end return l(((r()).y or 0)*.03125)end function R.get()if not r()then return nil end return R.getx(),R.gety()end function R.full(E,D)nO("tilehandler:full<x>",E,"number")nO("tilehandler:full<y>",D,"number")local k=I.contains local n=table.insert local R,P,Z=0,{},getObjects()for Z,I in pairs(Z)do if(I.x>=E*32-6 and I.x<=(E+1)*32-6)and(I.y>=D*32-2 and I.y<=(D+1)*32-2)then R=R+I.count if not k(P,I.id)then n(P,I.id)end end end return R>=3800 or#P>=20 end function Q.isStuck()if not M then M=n.isOnline end return(M and M()or n.isOnline())and K()==500 end function Q.handleStuck()local E=0 local D=1 local k=15 while Q.isStuck()do if E%D==0 then F()end E=E+1 local n=0 while n~=k do n=n+1 G(1000)if n~=0 and n%5~=0 then if not Q.isStuck()then break end end end end end function D.c(E,P,Z,I,H)H=H~=nil and H or false if not EO or EO and Y(w(),EO)>=10 then if not N then N=v.isFailed end if N()then v.handleCaptcha()end EO=w()if not DO or DO and Y(w(),DO)>=15 then if not B then B=Q.isStuck end if B()then Q.handleStuck()end DO=EO end end if not M then M=n.isOnline end if not M()then D.reconnect()if(k.getWorld()):match("_")then e.skipTutorial()end if E then nO("auth:c<world>",E,"string")E=E:upper()if not k.isInside(E)then k.warp(E,P or"")end if Z and I then e.sfindPath(Z,I)end end end if H and(Z and I)then if l((r()).x*.03125)~=Z or l((r()).y*.03125)~=I then if not x then x=R.isWhiteDoor end if x()and(E and P)then k.warp(E,P)end p(Z,I)end end end function D.reconnect(E,D,k)E=E or 8 D=D or 5 k=k~=nil and k or false local R=0 local P=k and 1 or 6 local Z=k and 7 or 5 G(math.random(0,Z)*1000)while not n.isOnline()do local k=n.getStatus()if k=="suspended"then return k end if k=="banned"then return k end if k=="maintenance"then return k end if k=="version update"then return k end if k=="temporary ban"then return k end if k=="onsendtoserver"then return k end if k=="aap detected"then return k end if k=="invalid email"then return k end if k=="guest error"then return k end if n.isOnline()then break end if R~=0 and R%(P*E)==0 then local E=0 local k=D*60 while E~=k do E=E+1 G(1000)if n.isOnline()then break end end if n.isOnline()then break end end if R%P==0 then F()end R=R+1 local I=0 while I~=Z do I=I+1 G(1000)if n.isOnline()then break end end end return n.getStatus()end function D.login(E,k,n,R)k=k~=nil and k or false n=n or 10000 R=R~=nil and R or false nO("auth:login<credential>",E,"table")nO("auth:login<remove>",k,"boolean")nO("auth:login<delay>",n,"number")nO("auth:login<force>",R,"boolean")local P,Z local I=0 local H=2 local q=10 local b=1 if k and r()then P=(r()).name while r(P)do if I>q then break end if I%H==0 then j(P)end I=I+1 G(b*1000)end end I=0 P=E.name Z=E.password if P==""and Z==""then P=r()and(r()).name end if not r(P)then if Z==""then s(g.GUEST_ACCOUNT,true)end if E.proxy then m(P,Z,E.proxy)else m(P,Z)end s(g.GUEST_ACCOUNT,false)else F()end s(g.AUTO_RECONNECT,false)s(g.AUTO_LEAVE,false)if not R then local E=D.reconnect(8,5,true)G(n)return E end G(n)end function P.format(E)nO("numberutils:format<number>",E,"number")if E>=1000000 then return X("%.2fm",E*1e-006)elseif E>=1000 then return X("%.2fk",E*.001)end return tostring(E)end function P.nformat(E)nO("numberutils:nformat<number>",E,"number")local D,k=X("%0.f",E)while k~=0 do D,k=D:gsub("^(%-?%d+)(%d%d%d)","%1.%2")end return D end function Z.nowIso()local E=T("!*t",w())local D=X("%d-%02d-%02dT%02d:%02d:%02dZ",E.year,E.month,E.day,E.hour,E.min,E.sec)return D end function I.contains(E,D)nO("tableutils:contains",E,"table")if type(D)=="string"then D=D:upper()end for k=1,#E,1 do local n=E[k]if type(n)=="string"then n=n:upper()end if n==D then return true end end return false end function q.collect(E,D,k)if A((r()).x-D)>96 or A((r()).y-k)>96 then return false end i({type=11;int_data=E;pos_x=D;pos_y=k})return true end function q.tvend(E,D)wrench(0,0)G(200)h(2,u.TAKE_VEND:format(E,D))G(1500)end function q.vend(E,D,k)wrench(0,0)G(200)if(V(D,k)).data==0 then h(2,u.INSERT_VEND:format(D,k,E))else h(2,u.UPDATE_VEND:format(D,k))end G(1500)end function b.drop(E,D)nO("inventoryhandler:drop<item_id>",E,"number")D=D or a(E)if D==0 then return end nO("inventoryhandler:drop<item_count>",D,"number")i({type=0;flags=48,pos_x=(r()).x;pos_y=(r()).y})h(2,u.DROP_DIALOG:format(E))G(250)h(2,u.DROP_OK:format(E,D))G(1250)end function H.random(E,D,k,n,R)E=E or 1 D=D or 1 k=k~=nil and k or false n=n~=nil and n or false R=R~=nil and R or false if not H.charset then local E=table.insert local D={}if k then for k=48,57,1 do E(D,string.char(k))end end for k=65,90,1 do E(D,string.char(k))end for k=97,122,1 do E(D,string.char(k))end H.charset=D end local P=""for E=1,E,1 do math.randomseed(((w()*D)*E)*(K()or 1))P=P..H.charset[math.random(1,#H.charset)]end if n then return P:upper()end if R then return P:lower()end return P end function H.randomi(E,D)E=E or 1 D=D or 1 if not H.charseti then local E=table.insert local D={}for k=48,57,1 do E(D,string.char(k))end H.charseti=D end local k=""for E=1,E,1 do math.randomseed(((w()*D)*E)*(K()or 1))k=k..H.charseti[math.random(#H.charseti)]end return k end function e.sfindPath(E,D)nO("botutils:sfindpath<x>",E,"number")nO("botutils:sfindpath<x>",D,"number")local k=0 local n=10 local R=p(E,D)while not R do if k>n then break end R=p(E,D)if R then break end G(100)k=k+1 end return R end function e.getGuest()if not r()then return nil end local E=S()for D=0,#E,1 do local k=E[D]if k.name:match("_")then if(k.name:match("(.+)_%d+")):upper()==(r()).name:upper()then return k.name end end end return nil end function e.skipTutorial()local E=e.getGuest()if not E then E=H.random(13)end if E:match("_")then E=E:gsub("_","")end if not(k.getWorld()):match(".+_1_.+")then return nil end h(2,u.TUTORIAL_POPUP_CLOSE)G(200)while not e.sfindPath(86,30)do G(1000)end J()while not(k.getWorld()):match(".+_2_.+")do G(1000)end while not e.sfindPath(46,23)do G(1000)end while(V(47,23)).fg~=0 do d(1,0)G(200)end while(V(47,23)).fg==0 do U(2,1,0)G(200)end while(V(47,23)).fg~=0 do d(1,0)G(200)end while a(3)==0 do O(3)G(250)end while(V(47,23)).fg~=0 do d(1,0)G(200)end while(V(47,23)).fg==0 do U(3,1,0)G(750)end while a(10672)==0 do G(500)end while a(10672)~=0 do U(10672,1,0)G(750)end while(V(47,23)).fg==3 do d(1,0)G(200)end while a(48)==0 do O(3)G(250)end while not W(48)do y(48)G(1000)end h(3,u.EXIT)while not k.isInside("EXIT")do G(1000)end local D=0 while not k.warp(E)do G(1000)E=E..D end while a(9640)==0 do G(200)end while a(9640)~=0 do U(9640,0,-1)G(200)end for E=0,2,1 do z(H.random(1))G(1500)end end function o.createMessageID(E,D)nO("webhook:fmessage<url>",E,"string")nO("webhook:fmessage<message>",D,"string")local k=E.."?wait=1"local n=X("[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Write-Host (Invoke-RestMethod -Uri %s -ContentType application/json -Method POST -Body (@{\'content\'=\'%s\'} | ConvertTo-Json -Depth 4));",k,D)local R=io.popen("powershell -Command \""..(n.."\""))if not R then return nil end local P=(R:read("*all")):match("@{id=(%d+);")R:close()return P end function o.getDefaultFooter()return{text="Developed by machseeman and made with <3\nLast Updated";icon_url="https://raw.githubusercontent.com/junssekut/saraFarm/main/images/img_logo-machseeman-eye.jpg"}end E.Auth=D E.WorldHandler=k E.StatusHandler=n E.PacketHandler=q E.InventoryHandler=b E.TileHandler=R E.NumberUtils=P E.DateUtils=Z E.TableUtils=I E.StringUtils=H E.BotUtils=e E.PingHandler=Q E.CaptchaHandler=v E.WebhookHandler=o E.ItemDatabase=c E.Json=L E.Date=C E.AssertUtils={assertv=kO,tassertv=nO}return E