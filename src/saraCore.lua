local v={_VERSION="0.1.6";_AUTHOR="junssekut#4964",_CONTRIBUTORS={}}local Q={}local G={}local D={}local L={}local N={}local b={}local c={}local h={}local n={}local M={}local q={}local e={}local f={}local C={}local z={VALUE_MISMATCH="[%s] got: %s",TYPE_MISMATCH="[%s] got: %s, expected: %s"}local p={JOIN_WORLD="action|join_request\nname|%s\ninvitedWorld|0",DROP_DIALOG="action|drop\n|itemID|%d",DROP_OK="action|dialog_return\ndialog_name|drop_item\nitemID|%d|\ncount|%d",EXIT="action|quit_to_exit",TUTORIAL_POPUP_CLOSE="ftue_start_popup_close",TAKE_VEND="action|dialog_return\ndialog_name|vending\ntilex|%d|\ntiley|%d|\nbuttonClicked|pullstock\n\nsetprice|0\nchk_peritem|0\nchk_perlock|1";INSERT_VEND="action|dialog_return\ndialog_name|vending\ntilex|%d|\ntiley|%d|\nstockitem|%d";UPDATE_VEND="action|dialog_return\ndialog_name|vending\ntilex|%d|\ntiley|%d|\nbuttonClicked|addstock\n\nsetprice|0\nchk_peritem|0\nchk_perlock|1"}local S={SELECT_ALL="Select All";GUEST_ACCOUNT="Guest Account",EXTERNAL="External";AUTO_ACCESS="Auto Access";AUTO_RECONNECT="Auto Reconnect",AUTO_LEAVE="Auto Leave";IGNORE_GEMS="Ignore Gems"}local V=_G.getBot local X=_G.getTile local j=_G.sendPacket local i=_G.sendPacketRaw local x=_G.sleep local m=_G.connect local w=_G.request local t=_G.setBool local k=_G.removeBot local l=_G.addBot local W=_G.findItem local o=_G.getPing local g=_G.findPath local U=_G.getPlayers local E=_G.enter local O=_G.punch local Y=_G.place local A=_G.collect local u=_G.wear local r=_G.findClothes local K=_G.say local a=string.format local I=math.floor local R=math.abs local J=os.date local B=os.time local y=os.difftime local s=L.isWhiteDoor local P=D.isOnline local d=f.isFailed local Z=e.isStuck local F=assert((load(w("GET","https://raw.githubusercontent.com/junssekut/saraItemDatabase/main/ItemDatabase.lua")))())local T=assert((load(w("GET","https://raw.githubusercontent.com/rxi/json.lua/master/json.lua")))())local H=assert((load(w("GET","https://raw.githubusercontent.com/Tieske/date/master/src/date.lua")))())local v6 local Q6 local function G6(v,Q)if not v then error(Q or"Assertion Failed!")end return v end local function D6(v,Q,G)return G6(type(Q)==G,z.TYPE_MISMATCH:format(v,type(Q),G))end function G.exit()j(3,p.EXIT)while not G.isInside("exit")do x(1000)end end function f.getCaptcha()if not V()then return"unknown"end return(V()).captcha or"unknown"end function f.isFailed()return not(f.getCaptcha()):match("Solved")end function f.handleCaptcha()local v=B()disconnect()x(250)Q.reconnect()return H.diff(v)end function G.warp(v,N,b,c,h)N=N or""b=b or 15 c=c or 6 h=h or 5000 D6("worldhandler:warp<world>",v,"string")D6("worldhandler:warp<id>",N,"string")D6("worldhandler:warp<limit_tries>",b,"number")D6("worldhandler:warp<after_tries>",c,"number")v=v:upper()local n=0 local M=5 while not G.isInside(v)do if not D.isOnline()then Q.reconnect()end if n~=0 and n%(c*b)==0 then return false end if n%c==0 then j(3,p.JOIN_WORLD:format(N==""and v or v..("|"..N)))end n=n+1 local L=0 while L~=M do L=L+1 x(1000)if G.isInside(v)then break end end end if v=="EXIT"or N==""then return G.isInside(v)end n=0 while L.isWhiteDoor()do if not D.isOnline()then Q.reconnect()end if n~=0 and n%(c*b)==0 then return false end if n%c==0 then j(3,p.JOIN_WORLD:format(v..("|"..N)))end n=n+1 local G=0 while G~=M do G=G+1 x(1000)if not L.isWhiteDoor()then break end end end x(M)return G.isInside(v)end function G.getWorld()if not V()then return"unknown"end return(V()).world or"unknown"end function G.isInside(v)G6(type(v)=="string",z.VALUE_MISMATCH:format("worldhandler:isinside<world>",type(v)))return G.getWorld()==v end function L.isWhiteDoor()if not V()then return false end local v=X(I((V()).x*.03125),I((V()).y*.03125))return(v and v.fg or nil)==6 end function D.getStatus(v)if not V(v or nil)then return"offline"end return(V(v or nil)).status or"offline"end function D.isOnline(v,Q)return(Q or D.getStatus(v or nil))=="online"end function L.calculateFloating(v,Q)if(X(v,Q)).flags==0 then return v,Q,0,0 end local G=L.getx()for D=-1,1,2 do if v+D==G then return v,Q,-D,0 end end for G=-1,1,2 do if v+G>=0 and v+G<=99 then if(X(v+G,Q)).flags==0 then if not g(v+G,Q)then x(500)else x(150)return v,Q,-G,0 end end end end for G=-1,1,1 do for D=-2,2,2 do if(v+G>=0 and v+G<=99)and(Q+D>=0 and Q+D<=53)then if(X(v+G,Q+D)).flags==0 then if not g(v+G,Q+D)then x(500)else x(150)return v,Q,-G,-D end end end end end return nil end function L.getx()if not V()then return nil end return I(((V()).x or 0)*.03125)end function L.gety()if not V()then return nil end return I(((V()).y or 0)*.03125)end function L.get()if not V()then return nil end return L.getx(),L.gety()end function L.full(v,Q)D6("tilehandler:full<x>",v,"number")D6("tilehandler:full<y>",Q,"number")local G=c.contains local D=table.insert local L,N,b=0,{},getObjects()for b,c in pairs(b)do if(c.x>=v*32-6 and c.x<=(v+1)*32-6)and(c.y>=Q*32-2 and c.y<=(Q+1)*32-2)then L=L+c.count if not G(N,c.id)then D(N,c.id)end end end return L>=3800 or#N>=20 end function e.isStuck()if not P then P=D.isOnline end return(P and P()or D.isOnline())and o()==500 end function e.handleStuck()local v=0 local Q=1 local G=15 while e.isStuck()do if v%Q==0 then m()end v=v+1 local D=0 while D~=G do D=D+1 x(1000)if D~=0 and D%5~=0 then if not e.isStuck()then break end end end end end function Q.c(v,N,b,c,h)h=h~=nil and h or false if not v6 or v6 and y(B(),v6)>=10 then if not d then d=f.isFailed end if d()then f.handleCaptcha()end v6=B()if not Q6 or Q6 and y(B(),Q6)>=15 then if not Z then Z=e.isStuck end if Z()then e.handleStuck()end Q6=v6 end end if not P then P=D.isOnline end if not P()then Q.reconnect()if(G.getWorld()):match("_")then q.skipTutorial()end if v then D6("auth:c<world>",v,"string")v=v:upper()if not G.isInside(v)then G.warp(v,N or"")end if b and c then q.sfindPath(b,c)end end end if h and(b and c)then if I((V()).x*.03125)~=b or I((V()).y*.03125)~=c then if not s then s=L.isWhiteDoor end if s()and(v and N)then G.warp(v,N)end g(b,c)end end end function Q.reconnect(v,Q,G)v=v or 8 Q=Q or 5 G=G~=nil and G or false local L=0 local N=G and 1 or 6 local b=G and 7 or 5 x(math.random(0,b)*1000)while not D.isOnline()do local G=D.getStatus()if G=="suspended"then return G end if G=="banned"then return G end if G=="maintenance"then return G end if G=="version update"then return G end if G=="temporary ban"then return G end if G=="onsendtoserver"then return G end if G=="aap detected"then return G end if G=="invalid email"then return G end if G=="guest error"then return G end if D.isOnline()then break end if L~=0 and L%(N*v)==0 then local v=0 local G=Q*60 while v~=G do v=v+1 x(1000)if D.isOnline()then break end end if D.isOnline()then break end end if L%N==0 then m()end L=L+1 local c=0 while c~=b do c=c+1 x(1000)if D.isOnline()then break end end end return D.getStatus()end function Q.login(v,G,D,L)G=G~=nil and G or false D=D or 10000 L=L~=nil and L or false D6("auth:login<credential>",v,"table")D6("auth:login<remove>",G,"boolean")D6("auth:login<delay>",D,"number")D6("auth:login<force>",L,"boolean")local N,b local c=0 local h=2 local n=10 local M=1 if G and V()then N=(V()).name while V(N)do if c>n then break end if c%h==0 then k(N)end c=c+1 x(M*1000)end end c=0 N=v.name b=v.password if N==""and b==""then N=V()and(V()).name end if not V(N)then if b==""then t(S.GUEST_ACCOUNT,true)end if v.proxy then l(N,b,v.proxy)else l(N,b)end t(S.GUEST_ACCOUNT,false)else m()end t(S.AUTO_RECONNECT,false)t(S.AUTO_LEAVE,false)if not L then local v=Q.reconnect(8,5,true)x(D)return v end x(D)end function N.format(v)D6("numberutils:format<number>",v,"number")if v>=1000000 then return a("%.2fm",v*1e-006)elseif v>=1000 then return a("%.2fk",v*.001)end return tostring(v)end function N.nformat(v)D6("numberutils:nformat<number>",v,"number")local Q,G=a("%0.f",v)while G~=0 do Q,G=Q:gsub("^(%-?%d+)(%d%d%d)","%1.%2")end return Q end function b.nowIso()local v=J("!*t",B())local Q=a("%d-%02d-%02dT%02d:%02d:%02dZ",v.year,v.month,v.day,v.hour,v.min,v.sec)return Q end function c.contains(v,Q)D6("tableutils:contains",v,"table")if type(Q)=="string"then Q=Q:upper()end for G=1,#v,1 do local D=v[G]if type(D)=="string"then D=D:upper()end if D==Q then return true end end return false end function n.collect(v,Q,G)if R((V()).x-Q)>96 or R((V()).y-G)>96 then return false end i({type=11,int_data=v,pos_x=Q,pos_y=G})return true end function n.tvend(v,Q)wrench(0,0)x(200)j(2,p.TAKE_VEND:format(v,Q))x(1500)end function n.vend(v,Q,G)wrench(0,0)x(200)if(X(Q,G)).data==0 then j(2,p.INSERT_VEND:format(Q,G,v))else j(2,p.UPDATE_VEND:format(Q,G))end x(1500)end function M.drop(v,Q)D6("inventoryhandler:drop<item_id>",v,"number")Q=Q or W(v)if Q==0 then return end D6("inventoryhandler:drop<item_count>",Q,"number")i({type=0;flags=48,pos_x=(V()).x;pos_y=(V()).y})j(2,p.DROP_DIALOG:format(v))x(250)j(2,p.DROP_OK:format(v,Q))x(1250)end function h.random(v,Q,G,D,L)v=v or 1 Q=Q or 1 G=G~=nil and G or false D=D~=nil and D or false L=L~=nil and L or false if not h.charset then local v=table.insert local Q={}if G then for G=48,57,1 do v(Q,string.char(G))end end for G=65,90,1 do v(Q,string.char(G))end for G=97,122,1 do v(Q,string.char(G))end h.charset=Q end local N=""for v=1,v,1 do math.randomseed(((B()*Q)*v)*(o()or 1))N=N..h.charset[math.random(1,#h.charset)]end if D then return N:upper()end if L then return N:lower()end return N end function h.randomi(v,Q)v=v or 1 Q=Q or 1 if not h.charseti then local v=table.insert local Q={}for G=48,57,1 do v(Q,string.char(G))end h.charseti=Q end local G=""for v=1,v,1 do math.randomseed(((B()*Q)*v)*(o()or 1))G=G..h.charseti[math.random(#h.charseti)]end return G end function q.sfindPath(v,Q)D6("botutils:sfindpath<x>",v,"number")D6("botutils:sfindpath<x>",Q,"number")local G=0 local D=10 local L=g(v,Q)while not L do if G>D then break end L=g(v,Q)if L then break end x(100)G=G+1 end return L end function q.getGuest()if not V()then return nil end local v=U()for Q=0,#v,1 do local G=v[Q]if G.name:match("_")then if(G.name:match("(.+)_%d+")):upper()==(V()).name:upper()then return G.name end end end return nil end function q.skipTutorial()local v=q.getGuest()if not v then v=h.random(13)end if v:match("_")then v=v:gsub("_","")end if not(G.getWorld()):match(".+_1_.+")then return nil end j(2,p.TUTORIAL_POPUP_CLOSE)x(200)while not q.sfindPath(86,30)do x(1000)end E()while not(G.getWorld()):match(".+_2_.+")do x(1000)end while not q.sfindPath(46,23)do x(1000)end while(X(47,23)).fg~=0 do O(1,0)x(200)end while(X(47,23)).fg==0 do Y(2,1,0)x(200)end while(X(47,23)).fg~=0 do O(1,0)x(200)end while W(3)==0 do A(3)x(250)end while(X(47,23)).fg~=0 do O(1,0)x(200)end while(X(47,23)).fg==0 do Y(3,1,0)x(750)end while W(10672)==0 do x(500)end while W(10672)~=0 do Y(10672,1,0)x(750)end while(X(47,23)).fg==3 do O(1,0)x(200)end while W(48)==0 do A(3)x(250)end while not r(48)do u(48)x(1000)end j(3,p.EXIT)while not G.isInside("EXIT")do x(1000)end local Q=0 while not G.warp(v)do x(1000)v=v..Q end while W(9640)==0 do x(200)end while W(9640)~=0 do Y(9640,0,-1)x(200)end for v=0,2,1 do K(h.random(1))x(1500)end end function C.createMessageID(v,Q)D6("webhook:fmessage<url>",v,"string")D6("webhook:fmessage<message>",Q,"string")local G=v.."?wait=1"local D=a("[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Write-Host (Invoke-RestMethod -Uri %s -ContentType application/json -Method POST -Body (@{\'content\'=\'%s\'} | ConvertTo-Json -Depth 4));",G,Q)local L=io.popen("powershell -Command \""..(D.."\""))if not L then return nil end local N=(L:read("*all")):match("@{id=(%d+);")L:close()return N end function C.getDefaultFooter()return{text="Developed by machseeman and made with <3\nLast Updated";icon_url="https://raw.githubusercontent.com/junssekut/saraFarm/main/images/img_logo-machseeman-eye.jpg"}end v.Auth=Q v.WorldHandler=G v.StatusHandler=D v.PacketHandler=n v.InventoryHandler=M v.TileHandler=L v.NumberUtils=N v.DateUtils=b v.TableUtils=c v.StringUtils=h v.BotUtils=q v.PingHandler=e v.CaptchaHandler=f v.WebhookHandler=C v.ItemDatabase=F v.Json=T v.Date=H v.ItemSprites={[242]="<:worldlock:1062300767773540392>";[1796]="<:diamondlock:1062300596616577034>";[2978]="<:vendingmachine:1083098588516712508>";[4584]="<:pepper:982947453089247264>";[4585]="<:pepper_tree_seed:1012630107715797073>";[5666]="<:laser_grid:1017034752060030976>";[5667]="<:laser_grid_seed:1017035839223640165>";GLOBE="<:globe:1062300599107993600>";BOARD="<:board1:1061608767130714222>";BOX="<:box:1061608771513761923>"}v.AssertUtils={assertv=G6,tassertv=D6}return v